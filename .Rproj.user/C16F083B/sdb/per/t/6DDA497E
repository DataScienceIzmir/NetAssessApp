{
    "contents" : "netAssess.resizeMap = function() {\n\tdocument.getElementById(\"map\").style.width = window.innerWidth + \"px\";\n\tdocument.getElementById(\"map\").style.height = (window.innerHeight - 40) + \"px\";\n}\n\n$(window).resize(function() {\n  netAssess.resizeMap();\n})\n\nnetAssess.resizeMap();\n\nnetAssess.data = {\n  us_bounds: L.latLngBounds([24.4, -124.8], [49.4, -66.9]),\n  newSiteCounter: 90001,\n  newSites: {},\n  biasLayers: []\n}\n\nnetAssess.loading = {\n  show: function() {\n    $(\"div.loading\").removeClass(\"hidden\");\n  },\n  hide: function() {\n    $(\"div.loading\").addClass(\"hidden\");\n  }\n}\n\nnetAssess.loading.show();\n\nnetAssess.basemaps = {\n\t\"Gray\": L.layerGroup([L.esri.basemapLayer(\"Gray\"), L.esri.basemapLayer(\"GrayLabels\")]),\n\t\"Street\": L.esri.basemapLayer(\"Streets\"),\n\t\"Satellite\" : L.esri.basemapLayer(\"Imagery\"),\n\t\"Satellite - Labelled\": L.layerGroup([L.esri.basemapLayer(\"Imagery\"), L.esri.basemapLayer(\"ImageryLabels\")])\n}\n\nnetAssess.overlays = {\n\to3: L.imageOverlay(\"images/o3_75.png\", [[24.51748, -124.76255], [49.38436, -66.92599]], {opacity: 0.65}),\n\tpm25: L.imageOverlay(\"images/pm25_35.png\", [[24.51748, -124.76255], [49.38436, -66.92599]], {opacity: 0.65})\n}\n\nnetAssess.layerGroups = {}\nnetAssess.layerGroups.aoi = L.featureGroup(null);\nnetAssess.layerGroups.rembias = L.featureGroup(null);\nnetAssess.layerGroups.newSiteSelection = L.layerGroup();\nnetAssess.layerGroups.areaServed = L.featureGroup(null);\nnetAssess.layerGroups.cormap = L.featureGroup(null);\nnetAssess.layerGroups.sites = L.siteGroup({\n  aoiLayer: netAssess.layerGroups.aoi,\n  correlations: true,\n  onEachSite: function(site) {\n      po = \"<span class = 'popup-text'><h4 class = 'header'>Site Information</h4>\"\n      po = po + \"<center><table class = 'popup-table'><tr>\"\n      \n      po = po + \"<td>Site ID(s)</td><td>\"\n    \tfor(si in site.properties.site_id) {\n    \t  po = po + site.properties.site_id[si] + \"<br />\"\n    \t}\n      po = po + \"</td></tr>\"\n      \n      po = po + \"<tr><td>Street Address</td>\"\n    \tpo = po + \"<td>\" + site.properties.Street_Address + \"</td></tr>\"\n      po = po + \"<tr><td colspan = 2 style = 'text-align: center; padding-top: 5px; border-right: none;'>Parameter Counts</td></tr>\"\n      po = po + \"<tr><td>Total</td><td>\" + site.properties.Count + \"</td></tr>\"\n    \tpo = po + \"<tr><td>Criteria:</td><td>\" + site.properties.Crit_Count + \"</td></tr>\"\n    \tpo = po + \"<tr><td>HAPS:</td><td>\" + site.properties.HAP_Count + \"</td></tr>\"\n    \tpo = po + \"<tr><td>Met:</td><td>\" + site.properties.Met_Count + \"</td></tr>\"\n      po = po + \"<tr><td colspan = 2 style = 'text-align: center; padding-top: 10px; border-right: none;'>Design Value Trends</td></tr>\"\n      po = po + \"<tr><td colspan = 2 style = 'text-align: center; border-right: none;'><div class = 'popup-trend'><img src = 'images/notrend.png' /></div></center></td></tr>\"\n      po = po + \"</table>\"\n    \tpo = po + \"</span>\"\n      \n      site.bindPopup(po, {minWidth: 150});\n\n  }\n})\nnetAssess.layerGroups.newSites = L.siteGroup({\n    contextmenu: true,\n    aoiLayer: netAssess.layerGroups.aoi,\n    visibilityTest: function(site) {\n      return (site.properties.Params.indexOf($(\"#paramOfInterest\").val()) != -1) \n    },\n    onEachSite: function(site) {\n      po = \"<span class = 'popup-text'><h4 class = 'header'>New Site Information</h4>\"\n      po = po + \"<center><table class = 'popup-table'><tr>\"\n      \n      po = po + \"<td>Site ID</td><td>\" + site.properties.Name + \"</td></tr>\"\n      po = po + \"<tr><td>County</td><td>\" + site.properties.County + \"</td></tr>\"\n      po = po + \"<tr><td>State</td><td>\" + site.properties.State + \"</td></tr>\"\n\n      po = po + \"<tr><td>Parameters</td><td>\"\n      for(var i = 0; i < site.properties.Params.length; i++) {\n        po = po + site.properties.Params[i] + \"<br />\"\n      }\n      po = po + \"</td></tr>\"\n\n      po = po + \"</table></span>\"\n  \n      site.bindPopup(po, {minWidth: 150});\n\n    },\n    styles: {\n      selected: {radius: 5, opacity: 0.67, fillOpacity: 0.67, fillColor: \"#40ff40\", color: \"#000\", weight: 1},\n      unselected: {radius: 4, opacity: 0.67, fillOpacity: 0.67, fillColor: \"#008000\", color: \"#000\", weight: 1}\n    }\n  })\n\nnetAssess.floaters = {\n  aoi: $.floater(\"#aoiFloater\", {title: \"Area of Interest\"}),\n  newSite: $.floater(\"#newSiteFloater\", {title: \"New Site\", close: false, minimize: false}),\n  areaServed: $.floater(\"#areaServedFloater\", {title: \"Area Served Information\", top: \"50px\", right: \"50px\"}),\n  cormat: $.floater(\"#cormatFloater\", {title: \"Correlation Matrix\", width: \"800px\", height: \"640px\", top: \"80px\", resize: true, left: \"80px\"}),\n  popup: $.floater(\"#popupFloater\", {title: \"Popup\", width: \"600px\", left: \"200px\", resize: true, minimize: false}),\n  legend: $.floater(\"#legendFloater\", {title: \"Legend\", close: false, width: '400px',  right: '50px', bottom: '50px'}),\n  download: $.floater(\"#downloadFloater\", {title: \"Download Data\", minimize: false, width: \"300px\", top: \"50px\", left: \"40%\"})\n}\n\n$(\"#aoiButton\").on(\"click\", netAssess.floaters.aoi.open)\n$(\"#downloadDataButton\").on(\"click\", netAssess.floaters.download.open)\n\n$(\"#newSiteButton\").on(\"click\", function(e) {\n  netAssess.layerGroups.newSiteSelection.clearLayers();\n  netAssess.draw.newSite.enable();\n})\n\nnetAssess.map = L.map(\"map\", {\n  contextmenu: true,\n  contextmenuWidth: 140,\n  contextmenuItems: [\n    {text: \"Full Extent\", iconCls: \"fa fa-serach-minus\", callback: netAssess.zoomOut}  \n  ],\n  zoomControl: false,\n  maxZoom: 12,\n  minZoom: 3\n})\n\nnetAssess.draw = {\n  polygon: new L.Draw.Polygon(netAssess.map, {allowInterSection: false, showArea: false, drawError: {color: '#b00b00', timeout: 1000}, shapeOptions: {color: '#0033ff', fill: false}}),\n  rectangle: new L.Draw.Rectangle(netAssess.map, {shapeOptions: {color: '#0033ff', fill: false}}),\n  disable: function() {\n    netAssess.draw.polygon.disable();\n\t  netAssess.draw.rectangle.disable();\n  },\n  newSite: new L.Draw.Marker(netAssess.map, {icon: L.divIcon({className: 'fa fa-crosshairs new-site-selector'})})\n}\n\n$(\"#drawPolygonButton\").on('click', function() {\n  netAssess.draw.disable();\n\tnetAssess.draw.polygon.enable()\n});\n\t  \n$(\"#drawRectangleButton\").on('click', function() {\n\tnetAssess.draw.disable();\n\tnetAssess.draw.rectangle.enable()\n});\n  \n$(\"#cancelDrawButton\").on('click', netAssess.draw.disable);\n\nnetAssess.map.on('draw:created', function(e) {\n  if(e.layerType == \"marker\") {\n    netAssess.getNewSite(e.layer)\n  } else {\n    netAssess.setAOI(e.layer)\n    netAssess.layerGroups.areaServed.clearLayers();\n    $(\"#areaSelect0\").click();\n    \n  }\n})\n\nnetAssess.setAOI = function(aoi) {\n  netAssess.layerGroups.aoi.clearLayers();\n  aoi.addTo(netAssess.layerGroups.aoi);\n  var aoiPolygons = {};\n  netAssess.layerGroups.aoi.eachLayer(function(layer) {\n    if(layer.hasOwnProperty(\"_layers\")) {\n      layer.eachLayer(function(sublayer) {\n        var ll = sublayer.getLatLngs();\n        aoiPolygons[sublayer._leaflet_id] = ll;\n      })\n    } else {\n  \t\tvar ll = layer.getLatLngs();\n  \t\taoiPolygons[layer._leaflet_id] = ll;\n    }\n\t})\n  document.getElementById(\"areaOfInterest\").updateAnchor(aoiPolygons);\n}\n\nnetAssess.getNewSite = function(newSite) {\n  \n    newSite.addTo(netAssess.layerGroups.newSiteSelection)\n  \n    var lat = newSite._latlng.lat;\n    var lng = newSite._latlng.lng;\n  \n    $(\"#nsLat\").val(Math.round(lat * 10000) / 10000);\n\t  $(\"#nsLng\").val(Math.round(lng * 10000) / 10000);\n    \n    var url = \"https://data.fcc.gov/api/block/find?latitude=\" + lat + \"&longitude=\" + lng + \"&showall=false&format=jsonp&callback=?\"\n\n    $.getJSON(url, function(wd) {\n      \n  \t\t$(\"#nsState\").val(wd.State.name);\n  \t\t$(\"#nsCounty\").val(wd.County.name);\n      $(\"#nsCensus\").val(wd.Block.FIPS.substring(0,11));\n  \t\tnetAssess.floaters.newSite.open();\n  \n  \t})  \n}\n\nnetAssess.setNewSite = function(e) {\n\n  var latlng = L.latLng({lat: $(\"#nsLat\").val(), lng: $(\"#nsLng\").val()});\n\n  var props = {County: $(\"#nsCounty\").val(), State: $(\"#nsState\").val(), \n  \t\t         Name: $(\"#nsName\").val(), Params: $(\"#newSiteParameters\").val(),\n               Tract: $(\"#nsCensus\").val(),\tkey: netAssess.data.newSiteCounter\n\t            }\n              \n  var opts = {contextmenu: true}\n             \n  netAssess.data.newSiteCounter++\n  \n//  document.getElementById(\"newSitesAnchor\").updateAnchor({type: \"add\", coords: latlng, properties: props})\n  \n  netAssess.layerGroups.newSites.addSite(latlng, props, opts)\n  netAssess.layerGroups.newSiteSelection.clearLayers();\n  netAssess.floaters.newSite.close();\n\n  netAssess.data.newSites[props.key] = {key: props.key, lat: latlng.lat, lng: latlng.lng, properties: props}\n  document.getElementById(\"newSites\").updateAnchor(netAssess.data.newSites)\n\n}\n\n$(\"#cancelSiteAddButton\").on(\"click\", function(e) {\n  netAssess.layerGroups.newSiteSelection.clearLayers();\n  netAssess.floaters.newSite.close();\n});\n\n$(\"#newSiteAddButton\").on(\"click\", netAssess.setNewSite);\n\nnetAssess.basemaps.Gray.addTo(netAssess.map)\n\nnetAssess.zoomOut = function() {\n  netAssess.map.fitBounds(netAssess.data.us_bounds);\n}\n\nnetAssess.zoomOut()\n\n$(\"#fullExtentButton\").on(\"click\", netAssess.zoomOut)\n\n// Add the layers control\nL.control.layers(netAssess.basemaps, \n  {\"Area of Interest\": netAssess.layerGroups.aoi,\n   \"Area Served\": netAssess.layerGroups.areaServed,\n   \"Ozone Probability\": netAssess.overlays.o3,\n   \"PM<sub>2.5</sub> Probability\": netAssess.overlays.pm25,\n   \"Removal Bias\": netAssess.layerGroups.rembias,\n   \"Correlations\": netAssess.layerGroups.cormap\n  }, {position: 'topleft'}).addTo(netAssess.map);\n\n$.ajax({\n  dataType: \"json\",\n  url: \"data/sites.geojson\",\n  success: function(data) {\n    var d = netAssess.layerGroups.sites.addGeoJSON(data)\n    window.setTimeout(function() {\n      for(var i = 0; i < netAssess.data.biasLayers.length; i++) {\n        netAssess.addBiasLayer(netAssess.data.biasLayers[i])\n      }\n      netAssess.loading.hide();\n    }, 1000)\n  }\n});\n\nnetAssess.layerGroups.areaServed.addTo(netAssess.map);\nnetAssess.layerGroups.sites.addTo(netAssess.map).bringToFront();\nnetAssess.layerGroups.newSites.addTo(netAssess.map).bringToFront();\nnetAssess.layerGroups.newSiteSelection.addTo(netAssess.map);\n$(\"#paramOfInterest\").select2({width: \"300px\", height: \"24px;\"});\n$(\"#areaSelectSelect\").select2({width: \"80%\"});\n$(\"#newSiteParameters\").select2({width: \"100%\", placeholder: \"Click to Select Parameters\"});\n\n$(\"#paramOfInterest\").on(\"change\", function(e) {\n  netAssess.layerGroups.newSites.testVisibility();\n  netAssess.layerGroups.rembias.clearLayers();\n  netAssess.layerGroups.cormap.clearLayers();\n  netAssess.layerGroups.areaServed.clearLayers();\n  var val = $(\"#paramOfInterest\").select2(\"val\")\n  if([\"44201\", \"88101\", \"88502\"].indexOf(val) != -1) {\n    netAssess.layerGroups.sites.options.correlations = true;\n  } else {\n    netAssess.layerGroups.sites.options.correlations = false;\n  }\n  document.getElementById(\"cormapSite\").updateAnchor(null);\n});\n\n$(\"#areaServedType\").on(\"change\", function(e) {\n  if($(\"#areaServedType\").val() == \"voronoi\") {\n    $(\"#circleSize\").attr(\"disabled\", \"disabled\")\n  } else {\n    $(\"#circleSize\").attr(\"disabled\", false)\n  }\n})\n\n$(\"#areaServedAgePlot, #areaServedRacePlot\").on(\"click\", function(event) {\n    $(\"#bigChart\").attr(\"src\", $(this).find(\"img\").attr(\"src\"))\n    netAssess.floaters.popup.open();\n})\n    \n$(\"#areaServedButton\").on(\"click\", function(event) {\n  netAssess.errorChecking.areaServed(event);\n})\n\n$(\"#cormatButton\").on(\"click\", function(event) {\n  netAssess.errorChecking.cormat(event);\n})\n\n$(\"#rembiasButton\").on(\"click\", function(event) {\n  netAssess.errorChecking.rembias(event);\n})\n\n\nnetAssess.errorChecking = {};\n\nnetAssess.errorChecking.basics = function(siteMax, siteMin) {\n  var active = true;\n\tvar body = \"Please correct the following problems:<ul>\";\n  \n\tif($(\"#paramOfInterest\").select2(\"val\") == \"-1\") {\n\t\tactive = false;\n\t\tbody = body + \"<li>No parameter selected</li>\"\n\t}\n  \n\tvar activeSites = 0;\n  \n  var vs = netAssess.layerGroups.sites.options.visibleSites.concat(netAssess.layerGroups.newSites.options.visibleSites);\n  var ss = netAssess.layerGroups.sites.options.selectedSites.concat(netAssess.layerGroups.newSites.options.selectedSites);\n  \n  for(var i = 0; i < ss.length; i++) {\n    if(vs.indexOf(ss[i]) != -1) {\n      activeSites++\n    }\n  }\n  \n\tif(activeSites == 0) {\n\t\tactive = false;\n\t\tbody = body + \"<li>No monitors selected</li>\";\n\t} else if(activeSites < siteMin && siteMin != 1) {\n\t\tactive = false;\n\t\tbody = body + \"<li>Too few monitors selected</li>\";\n\t} else if(activeSites > siteMax) {\n\t\tactive = false;\n\t\tbody = body + \"<li>Too many monitors selected</li>\";\n\t}\n    \n  return {active: active, body: body};\n  \n}\n\nnetAssess.errorChecking.areaServed = function(event) {\n\n  var bc = netAssess.errorChecking.basics(300, 1);\n  \n  if(bc.active) {\n    netAssess.loading.show();\n    netAssess.floaters.areaServed.close();\n    netAssess.floaters.popup.close();\n  } else {\n    event.stopImmediatePropagation();\n  \tbc.body = bc.body + \"</ul>\";\n  \tnetAssess.showAlert(\"Area Served Error\", bc.body)\n  }\n  \n}\n\nnetAssess.errorChecking.rembias = function(event) {\n  var bc = netAssess.errorChecking.basics(100, 1);\n  var param = $(\"#paramOfInterest\").select2(\"val\");\n  var vp = [\"44201\", \"88101\", \"88502\"];\n  if(vp.indexOf(param) == -1) {\n    bc.active = false;\n    bc.body = bc.body + \"<li>Removal Bias estimates are only available for parameter codes 44201, 88101, and 88502.</li>\"\n  }\n  \n  if(bc.active) {\n    netAssess.loading.show();\n    netAssess.layerGroups.rembias.addTo(netAssess.map);\n  } else {\n    event.stopImmediatePropagation();\n  \tbc.body = bc.body + \"</ul>\";\n  \tnetAssess.showAlert(\"Removal Bias Error\", bc.body)\n  }\n  \n}\n\nnetAssess.errorChecking.cormat = function(event) {\n\n  var bc = netAssess.errorChecking.basics(30, 1);\n  var param = $(\"#paramOfInterest\").select2(\"val\");\n  var vp = [\"44201\", \"88101\", \"88502\"];\n  if(vp.indexOf(param) == -1) {\n    bc.active = false;\n    bc.body = bc.body + \"<li>Correlation matrices are only available for parameter codes 44201, 88101, and 88502.</li>\"\n  }\n  \n  if(bc.active) {\n    netAssess.loading.show();\n    netAssess.floaters.cormat.open()\n  } else {\n    event.stopImmediatePropagation();\n    bc.body = bc.body + \"</ul>\";\n    netAssess.showAlert(\"Correlation Matrix Error\", bc.body);\n  }\n\n}\n\nnetAssess.showAlert = function(heading, body) {\n  $(\"#alert-heading\").html(heading);\n\t$(\"#alert-body\").html(body);\n\t$(\"#alert\").addClass(\"alert-open\");\n\n}\n\n$(\"#areaSelectZoomButton, #aoiZoomButton\").on(\"click\", function() {\n\tnetAssess.map.fitBounds(netAssess.layerGroups.aoi.getBounds());\n})\n\n\n$(\"#alert-close\").on(\"click\", function() {$(\"#alert\").removeClass(\"alert-open\")})\n\nnetAssess.layerGroups.sites.on(\"visibilityupdate\", function(event) {\n  document.getElementById(\"visibleSites\").updateAnchor(event.keys);\n})\nnetAssess.layerGroups.sites.on(\"selectionupdate\", function(event) {\n  document.getElementById(\"selectedSites\").updateAnchor(event.keys);\n})\nnetAssess.layerGroups.newSites.on(\"visibilityupdate\", function(event) {\n  document.getElementById(\"visibleNewSites\").updateAnchor(event.keys);\n})\nnetAssess.layerGroups.newSites.on(\"selectionupdate\", function(event) {\n  document.getElementById(\"selectedNewSites\").updateAnchor(event.keys);\n})\n\nnetAssess.layerGroups.sites.on(\"selectionupdate visibilityupdate\", function(event) {\n  if(netAssess.layerGroups.sites.options.selectedSites.length > 0) {\n    $(\"#sitesDataDownload\").parents(\"tr\").removeClass(\"disabled\");\n    if(['44201', '88101', '88502'].indexOf($(\"#paramOfInterest\").select2(\"val\")) != -1) {\n      $(\"#correlationDataDownload\").parents(\"tr\").removeClass(\"disabled\");\n      $(\"#rembiasDataDownload\").parents(\"tr\").removeClass(\"disabled\");\n    } else {\n      $(\"#correlationDataDownload\").parents(\"tr\").addClass(\"disabled\");\n      $(\"#rembiasDataDownload\").parents(\"tr\").addClass(\"disabled\");\n    }\n  } else {\n    $(\"#sitesDataDownload\").parents(\"tr\").addClass(\"disabled\");\n    $(\"#correlationDataDownload\").parents(\"tr\").addClass(\"disabled\");\n    $(\"#rembiasDataDownload\").parents(\"tr\").addClass(\"disabled\");\n  }\n})\n\nnetAssess.layerGroups.areaServed.on(\"layeradd\", function() {\n  $(\"#areaServedDataDownload\").parents(\"tr\").removeClass(\"disabled\");\n})\n\nnetAssess.layerGroups.areaServed.on(\"layerremove\", function() {\n  $(\"#areaServedDataDownload\").parents(\"tr\").addClass(\"disabled\");\n})\n\nnetAssess.map.on(\"popupopen\", function(e) {\n  if(e.popup._source.hasOwnProperty(\"properties\")) {\n    var key = e.popup._source.properties.key;\n    document.getElementById(\"popupID\").updateAnchor(key);\n    $(\".popup-trend\").on(\"click\", function(event) {\n      $(\"#bigChart\").attr(\"src\", $(this).find(\"img\").attr(\"src\"))\n      netAssess.floaters.popup.open();\n    })\n  }\n})\n\n\n/* Scripts to setup and handle the Sidebars */\n\nnetAssess.sidebars = {\n  settings: L.control.sidebar('settings-sb', {position: 'right', autoPan: false}),\n  help: L.control.sidebar('help-sb', {position: 'right', autoPan: false}),\n  about: L.control.sidebar(\"about-sb\", {position: 'right', autoPan: false})\n}\n\nL.easyButton(\"fa-cogs\", function() {netAssess.toggleSidebars(\"settings\");}, \"Settings\", netAssess.map);\nL.easyButton(\"fa-question\", function() {netAssess.toggleSidebars(\"help\");}, \"Help\", netAssess.map);\nL.easyButton(\"fa-info\", function() {netAssess.toggleSidebars(\"about\");}, \"About\", netAssess.map);\n\n// Add the sidebars to the map\nfor(var sb in netAssess.sidebars) {\n  if(netAssess.sidebars.hasOwnProperty(sb)) {\n\t\tnetAssess.map.addControl(netAssess.sidebars[sb]);\n\t}\n};\n\nnetAssess.toggleSidebars = function(sb) {\n  var sidebars = netAssess.sidebars;\n  for(var x in sidebars) {\n    if(sidebars.hasOwnProperty(x)) {\n      if(x == sb) {\n        sidebars[x].toggle();\n      } else {\n        sidebars[x].hide();\n      }\n    }\n  }\n}\n\n$(\"#ozoneNAAQS\").on(\"change\", function(e) {\n  switch(e.target.value) {\n    case \"65ppb\":\n      var o3_overlay = \"images/o3_65.png\";\n      break;\n    case \"70ppb\":\n      var o3_overlay = \"images/o3_70.png\";\n      break;\n    default:\n      var o3_overlay = \"images/o3_75.png\";\n  }\n  if($(\"#expParam\").val() == \"44201\") {\n    $(\"#areaServedThreshold\").html(\"(\" + $(\"#ozoneNAAQS\").val() + \")\");\n  }\n  netAssess.overlays.o3.setUrl(o3_overlay);\n  \n})\n\nnetAssess.map.on(\"overlayadd\", function(e) {\n  if(e.name == \"Ozone Probability\" || e.name == \"PM<sub>2.5</sub> Probability\") {\n    e.layer.bringToBack();\n    $(\"#probLegend\").css(\"display\", \"table-row\");\n    netAssess.floaters.legend.checkBottom();\n  } else if(e.name == \"Removal Bias\") {\n    $(\"#biasLegend\").css(\"display\", \"table-row\");\n    netAssess.floaters.legend.checkBottom();\n  } else if(e.name == \"Correlations\") {\n    $(\"#corLegend\").css(\"display\", \"table-row\");\n    netAssess.floaters.legend.checkBottom();\n  } else {\n    e.layer.bringToBack();\n  }\n})\n\nnetAssess.map.on(\"overlayremove\", function(e) {\n  if(e.name == \"Ozone Probability\" || e.name == \"PM<sub>2.5</sub> Probability\") {\n    $(\"#probLegend\").css(\"display\", \"none\");\n  } else if(e.name == \"Removal Bias\") {\n    $(\"#biasLegend\").css(\"display\", \"none\");\n  } else if(e.name == \"Correlations\") {\n    $(\"#corLegend\").css(\"display\", \"none\");    \n  }\n})\n\nnetAssess.layerGroups.sites.on(\"correlate\", function(event) {\n  document.getElementById(\"cormapSite\").updateAnchor(event.site.properties.key);\n  netAssess.layerGroups.cormap.addTo(netAssess.map);\n})\n\nnetAssess.layerGroups.sites.on(\"decorrelate\", function(event) {\n  document.getElementById(\"cormapSite\").updateAnchor(null);\n  netAssess.layerGroups.cormap.clearLayers();\n  netAssess.map.removeLayer(netAssess.layerGroups.cormap);\n})\n\nnetAssess.updateCorLayer = function(data) {\n  var layer = netAssess.layerGroups.cormap,\n  style = {radius: 8, stroke: true, weight: 1, opacity: 1, color: \"#000\", fill: true, fillOpacity: 1},\n  param = $(\"#paramOfInterest\").select2(\"val\");\n  layer.clearLayers();\n  \n  var min = Math.min.apply(Math, data.cor);\n  var max = Math.max.apply(Math, data.cor);\n  \n  max = Math.max(Math.abs(min), Math.abs(max));\n  \n  function colorCalc(cor) {\n    var col;\n    if(cor > 0.95) {\n      col = \"#E41A1C\";\n    } else if(cor > 0.9) {\n      col = \"#FF7F00\";\n    } else if(cor > 0.8) {\n      col = \"#FFFF33\";\n    } else if(cor > 0.7) {\n      col = \"#4DAF4A\";\n    } else if(cor > 0.6) {\n      col = \"#377EB8\";\n    } else {\n      col = \"#984EA3\";\n    }\n    return col;\n  }\n  \n  netAssess.layerGroups.sites.eachLayer(function(site) {\n    \n    if(site.keyCheck(data.site)) {\n      \n      for(var i = 0; i < site.properties.key.length; i++) {\n        var n = data.site.indexOf(site.properties.key[i])\n        if(n != -1) {\n          break;\n        }\n      }\n      \n      style.fillColor = colorCalc(data.cor[n])\n      \n      var mark = L.circleMarker(site._latlng, style), po, id = \"\"\n\n      for(var i = 0; i < site.properties.site_id.length; i++) {\n        id = id + site.properties.site_id[i] + \"<br />\"\n      }\n                \n      po = \"<span class = 'popup-text'><h4 class = 'header'>Correlation Information</h4>\"\n      po = po + \"<center><table class = 'popup-table bias'>\"\n      po = po + \"<tr><td>Site ID</td><td>\" + id + \"</td></tr>\"\n      po = po + \"<tr><td>Pearson Correlation</td><td>\" + data.cor[n] + \"</td></tr>\"\n      po = po + \"<tr><td>Relative Difference</td><td>\" + data.dif[n] + \"</td></tr>\"\n      po = po + \"<tr><td>Distance</td><td>\" + data.dis[n] + \" km</td></tr>\"\n      po = po + \"</table></span>\"\n      \n      mark.bindPopup(po, {minWidth: 150})\n      \n      layer.addLayer(mark)\n      \n    }\n  })\n  \n  netAssess.loading.hide();  \n}\n\nnetAssess.updateBiasLayer = function(data) {\n  \n  var layer = netAssess.layerGroups.rembias, \n  style = {radius: 8, stroke: true, weight: 1, opacity: 1, color: \"#000\", fill: true, fillOpacity: 1}, \n  param = $(\"#paramOfInterest\").select2(\"val\");\n  if(param == \"44201\") {\n    unit = \"ppm\"\n  } else {\n    unit = \"&mu;g/m<sup>3</sup>\"\n  }\n  layer.clearLayers()\n    \n  var min = Math.min.apply(Math, data.data.bias_mean)\n  var max = Math.max.apply(Math, data.data.bias_mean)\n  \n  max = Math.max(Math.abs(min), Math.abs(max));  \n  \n  function colorCalc(bias) {\n    var b = Math.abs(bias);\n    var col = \"#FFF\";\n    \n    var c = 256 - parseInt(b/max*256, 10);\n    c = c.toString(16);\n    if(c.length == 1) {c = \"0\" + c}\n    \n    if(bias < 0) {\n      col = \"#\" + c + c + \"FF\";\n    } else if(bias > 0) {\n      col = \"#FF\" + c + c;\n    }\n    \n    return col\n    \n  }\n  \n  netAssess.layerGroups.sites.eachLayer(function(site) {\n    \n    if(site.keyCheck(data.data.Key)) {\n      \n      for(var i = 0; i < site.properties.key.length; i++) {\n        var n = data.data.Key.indexOf(site.properties.key[i])\n        if(n != -1) {\n          break;\n        }\n      }\n      \n      style.fillColor = colorCalc(data.data.bias_mean[n])\n      \n      var mark = L.circleMarker(site._latlng, style), po, id = \"\"\n\n      for(var i = 0; i < site.properties.site_id.length; i++) {\n        id = id + site.properties.site_id[i] + \"<br />\"\n      }\n      \n      var start_date = String(data.data.start_date[n]);\n      var end_date = String(data.data.end_date[n]);\n      \n      start_date = start_date.substring(0,4) + \"-\" + start_date.substring(4,6) + \"-\" + start_date.substring(6,8);\n      end_date = end_date.substring(0,4) + \"-\" + end_date.substring(4,6) + \"-\" + end_date.substring(6,8);\n            \n      po = \"<span class = 'popup-text'><h4 class = 'header'>Removal Bias Information</h4>\"\n      po = po + \"<center><table class = 'popup-table bias'>\"\n      po = po + \"<tr><td>Site ID</td><td>\" + id + \"</td></tr>\"\n      po = po + \"<tr><td>Minimum Bias</td><td>\" + data.data.bias_min[n] + unit + \"</td></tr>\"\n      po = po + \"<tr><td>Maximum Bias</td><td>\" + data.data.bias_max[n] + unit + \"</td></tr>\"\n      po = po + \"<tr><td>Mean Bias</td><td>\" + data.data.bias_mean[n] + unit + \"</td></tr>\"\n      po = po + \"<tr><td>Start Date</td><td>\" + start_date + \"</td></tr>\"\n      po = po + \"<tr><td>End Date</td><td>\" + end_date + \"</td></tr>\"\n      po = po + \"<tr><td>Neighbors Included</td><td>\" + data.data.bias_n[n] + \"</tr>\"\n      po = po + \"<tr><td colspan = 2 style = 'text-align: center; padding-top: 8px; border-right: none;'>Relative Removal Bias</td></tr>\"\n      po = po + \"<tr><td>Min Relative Bias</td><td>\" + data.data.relbias_min[n] + \"%</td></tr>\"\n      po = po + \"<tr><td>Max Relative Bias</td><td>\" + data.data.relbias_max[n] + \"%</td></tr>\"\n      po = po + \"<tr><td>Mean Relative Bias</td><td>\" + data.data.relbias_mean[n] + \"%</td></tr>\"\n\n      po = po + \"</table></span>\"\n      \n      mark.bindPopup(po, {minWidth: 150})\n      \n      layer.addLayer(mark)\n      \n    }\n  })\n  \n  netAssess.loading.hide();\n  \n}\n\n$(\"#resetAppButton\").on(\"click\", function() {\n  \n  var r = confirm(\"Are you sure you want to reset the app?\")\n  \n  if(r == true) {\n    \n    $(\"#sitesDataDownload\").trigger(\"click\");\n    $(\"#paramOfInterest\").select2(\"val\", -1);\n    $(\"#paramOfInterest\").trigger(\"change\");\n    netAssess.layerGroups.aoi.clearLayers();\n    netAssess.layerGroups.areaServed.clearLayers();\n    $(\"#areaSelect0\").click();    \n    $(\"#alert\").removeClass(\"alert-open\")\n    var k = Object.keys(netAssess.floaters);\n    for(var i = 0; i < k.length; i++) {\n      if(k[i] != \"legend\") netAssess.floaters[k[i]].close()\n    }\n    netAssess.map.removeLayer(netAssess.overlays.o3);\n    netAssess.map.removeLayer(netAssess.overlays.pm25);\n    netAssess.map.removeLayer(netAssess.layerGroups.rembias);\n    $(\"#ozoneNAAQS\").select2(\"val\", \"75ppb\");\n    $(\"#areaServedClipping\").select2(\"val\", \"border\");\n    $(\"#areaServedType\").select2(\"val\", \"voronoi\");\n    netAssess.map.setBounds(netAssess.data.us_bounds);\n    \n  }\n  \n})\n\n\n\n\n\nnetAssess.ee = function() {\n  var esri_img = $(\"div.esri-leaflet-logo img\").attr(\"src\");\n  $(\"div.esri-leaflet-logo img\")\n    .on(\"mouseover\", function() {\n      $(this).attr(\"src\", \"images/pbe.png\")\n    })\n    .on(\"mouseout\", function() {\n      $(this).attr(\"src\", esri_img);\n    })\n}\nnetAssess.map.on(\"baselayerchange\", netAssess.ee)\nnetAssess.ee()\n\n\n\n\n\n\n\n\n$(\"#areaSelect0\").click();\nnetAssess.floaters.legend.open();",
    "created" : 1422041116696.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "404538004",
    "id" : "6DDA497E",
    "lastKnownWriteTime" : 1423066370,
    "path" : "C:/R/NetAssessApp/www/js/netassess.js",
    "project_path" : "www/js/netassess.js",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "js"
}