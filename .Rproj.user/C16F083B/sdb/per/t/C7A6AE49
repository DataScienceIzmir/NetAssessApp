{
    "contents" : "// The main variable that stores everything associated with the netAssess app.\nvar netAssess = {};\n\n// Various small bits of data needed by the app\nnetAssess.data = {\n\tnewSiteCounter: 90001,\n\tus_bounds: L.latLngBounds([24.4, -124.8], [49.4, -66.9]),\n\tus_center: L.latLng([39.8333, -98.5833]),\n}\n\n// The icon objects used by the app\nnetAssess.icons = {\n  existingSite: L.divIcon({className: 'site-icon hidden'}),\n\tnewSite: L.divIcon({className: 'new-site-icon'}),\n\tsiteSelector: L.divIcon({className: 'fa fa-crosshairs new-site-selector'})\n}\n\n// Basemaps available to the app\nnetAssess.basemaps = {\n\t\"Gray\": L.layerGroup([L.esri.basemapLayer(\"Gray\"), L.esri.basemapLayer(\"GrayLabels\")]),\n\t\"Street\": L.esri.basemapLayer(\"Streets\"),\n\t\"Satellite\" : L.esri.basemapLayer(\"Imagery\"),\n\t\"Satellite - Labelled\": L.layerGroup([L.esri.basemapLayer(\"Imagery\"), L.esri.basemapLayer(\"ImageryLabels\")])\n}\n\n// Overlay maps showing probability of exceedence for ozone and pm2.5. The \n// source of the ozone map is changed based on the selected ozone standard.\nnetAssess.overlays = {\n\to3: L.imageOverlay(\"images/o3_75.png\", [[24.51748, -124.76255], [49.38436, -66.92599]], {opacity: 0.65}),\n\tpm25: L.imageOverlay(\"images/pm25_35.png\", [[24.51748, -124.76255], [49.38436, -66.92599]], {opacity: 0.65})\n}\n\n// Controls used the the app.\nnetAssess.controls = {\n  // Sidebars are controlled by buttons on the left of the map.\n\tsidebars: {\n\t\tsettings: L.control.sidebar('settings-sb', {position: 'right', autoPan: false}),\n\t\thelp:  L.control.sidebar('help-sb', {position: 'right', autoPan: false}),\n\t\tabout: L.control.sidebar('about-sb', {position: 'right', autoPan: false})\n\t},\n  // Floaters are something I created to replace the need for sidebars for the \n  // more commonly used inputs/outputs. They look and act like windows that can \n  // be opened/closed/minimized/dragged based on the options specified at \n  // creation. See floaters.js.\n\tfloaters: {\n\t\tcormat: new $.floater(\"#cormat\", {title: \"Correlation Matrix\", \n                                      width: \"800px\", height: \"640px;\", \n                                      top: \"80px\", resize: true, left: \"80px\"}),\n\t\tareaServed: new $.floater(\"#areainfo\", {title: \"Area Served Information\", \n                                            top: \"50px\", right: \"50px\"}),\n\t\taoi: new $.floater(\"#aoi\", {title: \"Area of Interest\"}),\n\t\tlegend: new $.floater(\"#legend\", {title: \"Legend\", close: false, \n                                      width: '400px', height: \"250px\", \n                                      right: \"50px\", bottom: \"50px\"}),\n\t\tnewSite: new $.floater(\"#new_site\", {title: \"Add New Site\", width: '400px', \n                                         close: false, minimize: false}),\n    popup: new $.floater(\"#popup\", {title: \"Popup\", width: \"600px\", \n                                    left: \"200px\", minimize: false})\n  }\n}\n\nnetAssess.mapControls = {\n  fullExtent: function() {\n  \tnetAssess.map.fitBounds(netAssess.data.us_bounds);\n\t}\n}\n\n// Create the map\nnetAssess.map = L.map('map', {\n  contextmenu: true, \n\tcontextmenuWidth: 140, \n\tcontextmenuItems: [\n\t\t{text: \"Full Extent\", iconCls: \"fa fa-search-minus\", callback: netAssess.mapControls.fullExtent},\n\t\t{text: \"Area of Interest\", iconCls: \"fa fa-crosshairs\", callback: netAssess.controls.floaters.aoi.open}\n\t],\n\tdrawControl: false, \n\tzoomControl: false,\n\tmaxZoom: 12, \n\tminZoom: 3\n}).fitBounds(L.latLngBounds([24.4, -124.8], [49.4, -66.9]));\n\n",
    "created" : 1419960956785.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "2359653435",
    "id" : "C7A6AE49",
    "lastKnownWriteTime" : 1419955181,
    "path" : "C:/R/NetAssessApp/www/js/netassess-setup.js",
    "project_path" : "www/js/netassess-setup.js",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "js"
}